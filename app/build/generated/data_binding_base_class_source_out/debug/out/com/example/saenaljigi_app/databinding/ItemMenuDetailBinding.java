// Generated by view binder compiler. Do not edit!
package com.example.saenaljigi_app.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.saenaljigi_app.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ItemMenuDetailBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final ImageView background;

  @NonNull
  public final ImageView nextBtn;

  @NonNull
  public final ImageView prevBtn;

  @NonNull
  public final TextView tvMenuList;

  @NonNull
  public final TextView tvMenuType;

  private ItemMenuDetailBinding(@NonNull ConstraintLayout rootView, @NonNull ImageView background,
      @NonNull ImageView nextBtn, @NonNull ImageView prevBtn, @NonNull TextView tvMenuList,
      @NonNull TextView tvMenuType) {
    this.rootView = rootView;
    this.background = background;
    this.nextBtn = nextBtn;
    this.prevBtn = prevBtn;
    this.tvMenuList = tvMenuList;
    this.tvMenuType = tvMenuType;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ItemMenuDetailBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ItemMenuDetailBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.item_menu_detail, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ItemMenuDetailBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.background;
      ImageView background = ViewBindings.findChildViewById(rootView, id);
      if (background == null) {
        break missingId;
      }

      id = R.id.next_btn;
      ImageView nextBtn = ViewBindings.findChildViewById(rootView, id);
      if (nextBtn == null) {
        break missingId;
      }

      id = R.id.prev_btn;
      ImageView prevBtn = ViewBindings.findChildViewById(rootView, id);
      if (prevBtn == null) {
        break missingId;
      }

      id = R.id.tv_menu_list;
      TextView tvMenuList = ViewBindings.findChildViewById(rootView, id);
      if (tvMenuList == null) {
        break missingId;
      }

      id = R.id.tv_menu_type;
      TextView tvMenuType = ViewBindings.findChildViewById(rootView, id);
      if (tvMenuType == null) {
        break missingId;
      }

      return new ItemMenuDetailBinding((ConstraintLayout) rootView, background, nextBtn, prevBtn,
          tvMenuList, tvMenuType);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
